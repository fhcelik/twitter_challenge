package fetchSearchData;

import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.auth.AccessToken;
import twitter4j.Query;
import twitter4j.QueryResult;
import twitter4j.Status;

import java.util.List;
import java.util.ArrayList;

public class TwitterClient {

	//Consumer Key
	static String consumerKeyStr = "Bo0c1BJqvedi6dYD0Jse6yPXJ";
	static String consumerSecretStr = "iCfNlE4C8aONDa7rFrx7Dbwgop9RC9RvdrBNiWc4wtyBm31z3l";
	
	//Access Token
	static String accessTokenStr = "982684943393239040-KvBbVPIiWaFS8TGQ2CLYW2KFWUOu05m";
	static String accessTokenSecretStr = "aoAeqZ3KmXaf6fx5nnk4gcDfvujB3B40pR5vaZTX2VgOp";
	
	
	//Search method that will return all tweets related to the search keyword in a List
	public List searchForWord(String word, int limit){
		
		//List that will be used to store the resulting tweets
		List tweets = new ArrayList();
		
		try {
			
			//Initialize twitter object from factory
			Twitter twitter = new TwitterFactory().getInstance();

			//Set ConsumerKey and ConsumerSecret
			twitter.setOAuthConsumer(consumerKeyStr, consumerSecretStr);
			
			//Create AccessToken object with the string variables we set previously
			AccessToken accessToken = new AccessToken(accessTokenStr,
					accessTokenSecretStr);

			//Set access token to twitter object
			twitter.setOAuthAccessToken(accessToken);

			//Define your query object. The parameter to the Query constructor is the word to search
			Query query = new Query(word);
			
			//Define the resultset size. This example will return 10,000 results
			query.setCount(10001);
			
			//Execute the search method in the twitter object. The results are contained in a QueryResult object that contains one object Status per Tweet
			QueryResult result = twitter.search(query);

			//Add resulting entries to the List that we will return
			for(Status status: result.getTweets()){
				tweets.add(status.getText());
			}


		} catch (TwitterException te) {
			//Print any error that may be associated with this code
			te.printStackTrace();
		}
		
		//Return List with all the tweets found as part of the search
		return tweets;
	}
	

	public static void main(String[] args) {
		//Instantiating current class to an object
		TwitterClient search = new TwitterClient();
		userInputs topics = new userInputs();
		ArrayList<String> topic = topics.inputs();
		for(int i=0; i<topic.size(); i++) {
		   System.out.println(search.searchForWord(topic.get(i),4));
		}
	}

}

